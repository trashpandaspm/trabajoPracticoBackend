services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    ports:
      - "8081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
    volumes:
      - keycloak_data:/opt/keycloak/data

  h2-db:
    image: oscarfonts/h2
    container_name: h2-db
    ports:
      - "8082:81"   # Consola web
      - "9092:1521"  # Conexiones TCP
    volumes:
      - ./tpiDb-ddl-create.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data-tpi:/opt/h2-data
    environment:
      H2_OPTIONS: -ifNotExists

  servicio-pedidos:
    build:
      context: ./servicio-pedidos
      args:
        SERVER_PORT: 8080
    container_name: servicio-pedidos
    ports:
      - "8080:8080"
    depends_on:
      - h2-db
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-db:1521/./tpiDb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  servicio-logistica:
    build:
      context: ./servicio-logistica
      args:
        SERVER_PORT: 8083
    container_name: servicio-logistica
    ports:
      - "8083:8083"
    depends_on:
      - h2-db
    environment:
      - SERVER_PORT=8083
      - SPRING_DATASOURCE_URL=jdbc:h2:tcp://h2-db:1521/./tpiDb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api-gateway:
    build:
      context: ./api-gateway
      args:
        SERVER_PORT: 9000
    container_name: api-gateway
    ports:
      - "9000:9000"
    depends_on:
      servicio-pedidos:
        condition: service_healthy # Ahora espera a que el servicio esté saludable
      servicio-logistica:
        condition: service_healthy # Ahora espera a que el servicio esté saludable
    environment:
      - SERVER_PORT=9000

volumes:
  keycloak_data:
